version: 2.1

orbs:
  python: circleci/python@1.2.1
  node: circleci/node@5.0.2
  cypress: cypress-io/cypress@3.0.0



jobs:
  build_test:
    docker:
      - image: circleci/python:3.8
      - image: postgres:14.1
        environment:
          POSTGRES_PASSWORD: $POSTGRES_PASSWORD
          POSTGRES_USER: postgres
          POSTGRES_DB: cpi_local
    parallelism: 4
    steps:
      - checkout
      - run:
          name: Install AWS CLI
          command: |
            sudo mkdir -p /PostgresDump
            sudo chmod 777 /PostgresDump
            sudo apt-get update
            sudo apt-get install -y awscli
            aws configure set aws_access_key_id ${AWS_ACCESS_KEY_ID}
            aws configure set aws_secret_access_key ${AWS_SECRET_ACCESS_KEY}
            aws configure set default.region ${AWS_DEFAULT_REGION}
            aws s3 cp s3://$AWS_STORAGE_BUCKET_NAME/PostgresDump/SP2_db_2.sql /PostgresDump
      - run:
          name: Install system dependencies
          command: |
            sudo apt-get update
            sudo apt-get install -y postgresql-client libxmlsec1-dev libxml2-dev libxslt1-dev xmlsec1
            sudo apt-get install libnss3
            sudo ldconfig /usr/local/lib            
          environment:
            LC_ALL: C.UTF-8
            LANG: C.UTF-8
      - run:
          name: Restore database from dump file
          command: |
            psql -U "$POSTGRES_USER" -d "$POSTGRES_DB" -h localhost < /PostgresDump/SP2_db_2.sql
          environment:
            LC_ALL: C.UTF-8
            LANG: C.UTF-8
      - run:
          name: Install Python dependencies
          command: |
            python -m venv venv
            source venv/bin/activate
            pip install -r requirements.txt
            pip install --upgrade pip
            pip install Django
          environment:
            LC_ALL: C.UTF-8
            LANG: C.UTF-8

      - run:
          name: Migrate database
          command: |
            sudo chmod -R 777 /home
            cp /home/circleci/project/UnoCPI/settings.py /home/circleci/project/UnoCPI/settings.py_bak
            aws s3 cp s3://$AWS_STORAGE_BUCKET_NAME/circleci/circleci_settings.py /home/circleci/project/UnoCPI/settings.py
            source venv/bin/activate
            export DATABASE_URL=postgresql://"$POSTGRES_USER":'$POSTGRES_PASSWORD'@localhost/"$POSTGRES_DB"
            ls
            python manage.py makemigrations
            python manage.py migrate --noinput
            python manage.py createsuperuser --email=myuser@gmail.com --noinput
          environment:
            LC_ALL: C.UTF-8
            LANG: C.UTF-8


      - run:
          name: Collect Static Files
          command: |
            source venv/bin/activate
            export GOOGLE_MAPS_API_KEY=$GOOGLE_MAPS_API_KEY
            #python manage.py collectstatic --noinput
      - run:
          name: Run Server
          command: |
            source venv/bin/activate
            nohup python manage.py runserver > server.log 2>&1 &
            sleep 30
      - run:
          name: Test Server
          command: |
            curl -k -v http://localhost:8000/
      - run:
          name: Install Cypress Packages
          command: |
            sleep 3
            aws s3 cp s3://$AWS_STORAGE_BUCKET_NAME/circleci/cypress.env.json /home/circleci/project/cypress.env.json
            export LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu/
            sudo apt-get update && sudo apt-get upgrade
            sudo apt-get install apt-utils
            sudo apt-get install libnss3
            sudo apt-get install libatk-bridge2.0-0
            sudo apt-get install -y libgtk-3-0
            sudo apt-get install libasound2
            sudo apt-get install -y nodejs
            sudo apt-get install -y npm
            export DISPLAY=:99
            Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
            npm install cypress@latest
            mkdir -p /home/circleci/project/test-results
            #npx cypress run --parallel --record --key ${CYPRESS_RECORD_KEY} --headless
            #npm run start
      - run:
          name: Run Cypress Test Scripts
          command: |
            if [[ $CIRCLE_NODE_INDEX == 0 ]]; then
              export CYPRESS_SPEC=cypress/e2e/cepiProject/cepiTestPriority1.cy.js
              #sleep 5
              npm run cy:run
            elif [[ $CIRCLE_NODE_INDEX == 1 ]]; then
              export CYPRESS_SPEC=cypress/e2e/cepiProject/cepiTestPriority2.cy.js
              npm run cy:run
            elif [[ $CIRCLE_NODE_INDEX == 2 ]]; then
              export CYPRESS_SPEC=cypress/e2e/cepiProject/cepiTestPriority3.cy.js
              npm run cy:run
            elif [[ $CIRCLE_NODE_INDEX == 3 ]]; then
              export CYPRESS_SPEC=cypress/e2e/cepiProject/cepiTestPriority4.cy.js
              npm run cy:run
            fi
          environment:
            CYPRESS_baseUrl: http://localhost:8000/
      - store_artifacts:
          path: cypress/videos
          destination: videos
      - store_artifacts:
          path: cypress/screenshots
          destination: screenshots
  deploy:
    docker:
      - image: circleci/python:3.8
    steps:
      - run:
          name: DeployTest
          command: |
            echo "deploy test"

workflows:
  build_test:
    jobs:
      - build_test:
          filters:
            branches:
              only:
                - SP23_CICD_Pipeline
  deploy:
    jobs:
      - deploy:
          filters:
            branches:
                only:
                  - master
                    



